arbitrator = cut_through
router = minimal
accuracy_parameter = 4096

#network_bandwidth = 3GB/s 
#network_switch_bandwidth = 2GB/s 
#network_hop_latency = 100ns
#injection_bandwidth = 10GB/s 
#injection_latency = 1us
#memory_bandwidth = 50GB/s
#memory_latency = 82ns
#memory_accuracy_parameter = 10000000
#max_memory_bandwidth = 50GB/s


switch {
 xbar {
  bandwidth = 2GB/s 
 }
 link {
  bandwidth = 3GB/s 
  latency = 100ns
 }
}

topology {
 name = dragonfly
 # groups are 16x6 hypercube, 15 gropus
 geometry = 16 6 15
 # each switch has 2 doubly redundant global connections
 group_connections = 2
 # global links might have a different BW
 redundant = 1 3 2
 #this is per netlink block (ignored in amm1,2,3)
 concentration = 4
 injection_redundant = 4
}

netlink {
 concentration = 2
}

node {
 app1 {
  mpi {
   implementation = rdma
   max_eager_msg_size = 16384
   smp_single_copy_size = 16384
  }
 }
 memory {
  bandwidth = 1000GB/s
  latency = 82ns
  mtu = 10000000
  max_single_bandwidth = 50GB/s
 }
 model = simple
 frequency = 2ghz
 ncores = 24
 nsockets = 2
 nic {
  injection {
   redundant = 4
   bandwidth = 10GB/s 
   latency = 1us
  }
 }
 proc {
  parallelism = 1.65
 }
 lib_compute_unroll_loops = 1.0
}


