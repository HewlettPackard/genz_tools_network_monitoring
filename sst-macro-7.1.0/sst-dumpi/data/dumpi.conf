# Concept configuration file for dumpi (refactored).

# file root defaults to "dumpi-"
fileroot     dumpi-

# You can define what sort of timestamp information you want output.
# timestamp (none|cpu|wall|full)  # defaults to full
timestamp    full

# Specify how much profiling you want for individual MPI calls.
# All calls can be disabled or enabled for profiling (call count statistics
# will still be collected).  Additionally, probing calls (Iprobe, Test*, ...)
# can be conditionally profiled iff they succeed (for non-probing calls,
# success is equivalent to enable).
#
# MPI_Default (disable|success|enable)  # all MPI calls default to enable
MPI_Default enable
# Individual MPI calls can override the default setting, e.g.:
MPI_Iprobe   success
MPI_Test     success
MPI_Testsome success
MPI_Testany  success
MPI_Testall  success
#
# Output can also be selectively suppressed for status information (it is
# big and clumsy, and you may not want to use it).  
# success is synonymous with enable.
# statuses (disable|success|enable)   # defaults to enable
statuses     enable

#
# There is a whole set of other calls for PAPI profiling support.
# By default, all PAPI calls are disabled unless explictly turned on.
# To turn on a PAPI call, just specify its name (not commented), e.g.
PAPI PAPI_TOT_CYC   # total cycles
PAPI PAPI_LST_INS   # total load store instructions
PAPI PAPI_BR_INS    # total branch instructions executed
# Note that you can also specify non-native PAPI calls this way 
# -- use papi_avail or papi_native_avail to figure out the name of
# the performance counter you want to use

#
# You can enable or disable debugging from this file.
# The valid flags are:
#     debug off      Disable all debugging
#     debug all      Enable all debugging
#     debug traceio  Get info about io functions
#     debug mpicalls Get info about when MPI functions are entered or exited
#     debug libdumpi Get debug info about internal workings of libdumpi
#
# All debug flags except "off" are cumulative, so you can use
#     debug traceio
#     debug mpicalls
# to get info about both traceio and mpicalls.
debug        off
